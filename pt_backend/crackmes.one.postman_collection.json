{
	"info": {
		"_postman_id": "1f253239-6b3b-43df-a688-934eed2bf4d9",
		"name": "crackmes.one",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"item": [
						{
							"name": "New user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"generated_username\", pm.variables.replaceIn('{{$guid}}'));\r",
											"pm.collectionVariables.set(\"generated_password\", pm.variables.replaceIn('{{$randomPassword}}'))\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"\r",
											"pm.test(\"solved_count = 0\", () => {\r",
											"    const response = pm.response.json();\r",
											"    pm.expect(response.solved_count).to.eql(0);\r",
											"    pm.collectionVariables.set(\"user_id\", response.id);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{generated_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/register/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Existing username",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Username error message\", () => {\r",
											"    pm.expect(pm.response.json()).to.have.property('username');\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{generated_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/register/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing username",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Username error message\", () => {\r",
											"    pm.expect(pm.response.json()).to.have.property('username');\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{generated_username}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/register/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Password error message\", () => {\r",
											"    pm.expect(pm.response.json()).to.have.property('password');\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{$guid}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/register/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing data",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Username and password error message\", () => {\r",
											"    pm.expect(pm.response.json()).to.have.property('username');\r",
											"    pm.expect(pm.response.json()).to.have.property('password');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{generated_username}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/api/v1/auth/register/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Existing user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Tokens\", () => {\r",
											"    const jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse).to.have.property('refresh');\r",
											"    pm.expect(jsonResponse).to.have.property('access');\r",
											"\r",
											"    pm.collectionVariables.set('refresh_token', jsonResponse['refresh']);\r",
											"    pm.collectionVariables.set('access_token', jsonResponse['access']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{generated_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:8000/api/v1/auth/login/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Nonexisting user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"\r",
											"pm.test(\"No existing account error message\", () => {\r",
											"    const jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse).to.have.property('detail');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{$guid}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{$randomPassword}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:8000/api/v1/auth/login/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Username error message\", () => {\r",
											"    const jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse).to.have.property('username');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{generated_username}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:8000/api/v1/auth/login/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Password error message\", () => {\r",
											"    const jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse).to.have.property('password');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{generated_username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "localhost:8000/api/v1/auth/login/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth",
										"login",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Password and username error message\", () => {\r",
											"    const jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse).to.have.property('password');\r",
											"    pm.expect(jsonResponse).to.have.property('username');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{generated_username}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{generated_password}}",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "localhost:8000/api/v1/auth/login/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth",
										"login",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Token refresh",
					"item": [
						{
							"name": "Valid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Tokens\", () => {\r",
											"    const jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse).to.have.property('refresh');\r",
											"    pm.expect(jsonResponse).to.have.property('access');\r",
											"\r",
											"    pm.collectionVariables.set('refresh_token', jsonResponse['refresh']);\r",
											"    pm.collectionVariables.set('access_token', jsonResponse['access']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "refresh",
											"value": "{{refresh_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:8000/api/v1/auth/refresh/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth",
										"refresh",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"\r",
											"pm.test(\"Invalid token message\", () => {\r",
											"    const jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse).to.have.property('detail');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "refresh",
											"value": "{{$randomLoremParagraph}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:8000/api/v1/auth/refresh/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth",
										"refresh",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Invalid token message\", () => {\r",
											"    const jsonResponse = pm.response.json()\r",
											"    pm.expect(jsonResponse).to.have.property('refresh');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "refresh",
											"value": "{{$randomLoremParagraph}}",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "localhost:8000/api/v1/auth/refresh/",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth",
										"refresh",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Task list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"List of tasks\", () => {\r",
									"    const task_array = pm.response.json()\r",
									"    pm.expect(task_array).to.be.a(\"array\");\r",
									"    pm.expect(task_array.length).to.greaterThan(0);\r",
									"    const singleTask = task_array[0];\r",
									"\r",
									"    for(prop of ['id', 'actions', 'name']){\r",
									"        pm.expect(singleTask).to.has.property(prop);\r",
									"    }\r",
									"\r",
									"    pm.collectionVariables.set(\"first_task_id\", singleTask['id']);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "localhost:8000/api/v1/tasks/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Task list no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"List of tasks\", () => {\r",
									"    const task_array = pm.response.json()\r",
									"    pm.expect(task_array).to.be.a(\"array\");\r",
									"    pm.expect(task_array.length).to.greaterThan(0);\r",
									"    const singleTask = task_array[0];\r",
									"\r",
									"    for(prop of ['id', 'name']){\r",
									"        pm.expect(singleTask).to.has.property(prop);\r",
									"    }\r",
									"\r",
									"    pm.expect(singleTask).to.not.has.property('actions');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "localhost:8000/api/v1/tasks/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update task status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Returned status\", () => {\r",
									"    const history = pm.response.json()\r",
									"    for(prop of ['id', 'date', 'status', 'task', 'user']){\r",
									"        pm.expect(history).to.has.property(prop);\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "status",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/v1/tasks/{{first_task_id}}/status",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"{{first_task_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update task status - no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(401);\r",
									"})\r",
									"\r",
									"pm.test(\"Returned status\", () => {\r",
									"    pm.expect(pm.response.json()).to.have.property('detail');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "status",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/v1/tasks/{{first_task_id}}/status",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"{{first_task_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update task missing data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Returned status\", () => {\r",
									"    pm.expect(pm.response.json()).to.have.property('status');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "status",
									"value": "3",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/v1/tasks/{{first_task_id}}/status",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"{{first_task_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update non-existent task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Returned status\", () => {\r",
									"    pm.expect(pm.response.json()).to.have.property('task');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "status",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:8000/api/v1/tasks/1261224/status",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"1261224",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "User task history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"List of histories\", () => {\r",
									"    const histories = pm.response.json()\r",
									"    pm.expect(histories).to.be.a(\"array\");\r",
									"    pm.expect(histories.length).to.greaterThan(0);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "localhost:8000/api/v1/tasks/{{first_task_id}}",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"{{first_task_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User task history - no auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(401);\r",
									"})\r",
									"\r",
									"pm.test(\"Returned status\", () => {\r",
									"    pm.expect(pm.response.json()).to.have.property('detail');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "localhost:8000/api/v1/tasks/1",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"tasks",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"User details\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id.toString()).to.eql(pm.variables.replaceIn('{{user_id}}'));\r",
									"    pm.expect(response.username).to.eql(pm.variables.replaceIn('{{generated_username}}'));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"})\r",
									"\r",
									"pm.test(\"Password changed\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.id.toString()).to.eql(pm.variables.replaceIn('{{user_id}}'));\r",
									"    pm.expect(response.username).to.eql(pm.variables.replaceIn('{{generated_username}}'));\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "oldPassword",
									"value": "{{generated_password}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{$randomPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(403);\r",
									"})\r",
									"\r",
									"pm.test(\"User details\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.key('oldPassword');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "oldPassword",
									"value": "{{$randomPassword}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{$randomPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password missing oldPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Missing field message\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.key('detail');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "oldPassword",
									"value": "{{$randomPassword}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "{{$randomPassword}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update password missing password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"})\r",
									"\r",
									"pm.test(\"Missing field message\", () => {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response).to.have.key('detail');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "oldPassword",
									"value": "{{$randomPassword}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{$randomPassword}}",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/me/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"me",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "localhost:8000"
		},
		{
			"key": "generated_username",
			"value": ""
		},
		{
			"key": "generated_password",
			"value": ""
		},
		{
			"key": "refresh_token",
			"value": ""
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "first_task_id",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		}
	]
}